# docker-compose.yml
version: '3.8'

services:
  mqtt-analyzer:
    build: .
    ports:
      - "1883:1883"   # MQTT (TCP)
      - "8883:8883"   # MQTTS (TLS/SSL)
      - "8887:8887"   # WebSocket (WS)
      - "8888:8888"   # WebSocket Secure (WSS)
      - "3001:3001"   # Health check
    volumes:
      - ./logs:/app/logs
      - ./mqtt_logs:/app/mqtt_logs
      - ./certs:/app/certs  # SSL certificates
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      
      # Домен (обязательно указать для продакшена)
      - MQTT_DOMAIN=${MQTT_DOMAIN:-localhost}
      - SSL_COUNTRY=${SSL_COUNTRY:-US}
      - SSL_STATE=${SSL_STATE:-California}
      - SSL_CITY=${SSL_CITY:-San Francisco}
      - SSL_ORG=${SSL_ORG:-MQTT Device Analyzer}
      - SSL_OU=${SSL_OU:-IT Department}
      
      # Протоколы (по умолчанию все включены)
      - ENABLE_MQTT=${ENABLE_MQTT:-true}
      - ENABLE_MQTTS=${ENABLE_MQTTS:-true}
      - ENABLE_WS=${ENABLE_WS:-true}
      - ENABLE_WSS=${ENABLE_WSS:-true}
      
      # Порты (можно переопределить)
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTTS_PORT=${MQTTS_PORT:-8883}
      - WS_PORT=${WS_PORT:-8887}
      - WSS_PORT=${WSS_PORT:-8888}
      - HEALTH_PORT=${HEALTH_PORT:-3001}
      
      # SSL настройки
      - SSL_ENABLED=${SSL_ENABLED:-true}
      - SSL_KEY_PATH=/app/certs/server.key
      - SSL_CERT_PATH=/app/certs/server.crt
      - SSL_REJECT_UNAUTHORIZED=${SSL_REJECT_UNAUTHORIZED:-false}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mqtt-network

  # Опциональный сервис для генерации SSL сертификатов
  cert-generator:
    image: alpine/openssl
    volumes:
      - ./certs:/certs
    command: >
      sh -c "
        if [ ! -f /certs/server.key ]; then
          echo 'Generating SSL certificates...';
          openssl req -x509 -newkey rsa:4096 -keyout /certs/server.key -out /certs/server.crt -days 365 -nodes -subj '/C=US/ST=State/L=City/O=Organization/CN=localhost';
          chmod 644 /certs/server.key /certs/server.crt;
          echo 'SSL certificates generated successfully';
        else
          echo 'SSL certificates already exist';
        fi
      "
    profiles:
      - tools

networks:
  mqtt-network:
    driver: bridge